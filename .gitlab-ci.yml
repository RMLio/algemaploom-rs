# Unittests
test-rust:
  image: rustdocker/rust:stable
  stage: test
  script:
    - cargo test --verbose --jobs 1 --workspace

test-java:
  image: rustdocker/rust:stable
  stage: test
  script:
    - sudo apt update
    - sudo apt install -y openjdk-17-jdk curl maven gcc-mingw-w64
    - rustup target add x86_64-unknown-linux-gnu
    - rustup target add x86_64-pc-windows-gnu
    - rustup target add x86_64-apple-darwin
    - rustup target add aarch64-apple-darwin
    - ./test_java.sh

# Builds
build-rust:
  image: rustdocker/rust:stable
  stage: build
  script:
    - cargo build

build-java:
  image: rustdocker/rust:stable
  stage: build
  script:
    - apt update
    - apt install -y openjdk-17-jdk curl maven gcc-mingw-w64
    - rustup target add x86_64-unknown-linux-gnu
    - rustup target add x86_64-pc-windows-gnu
    - rustup target add x86_64-apple-darwin
    - rustup target add aarch64-apple-darwin
    - ./build_java.sh

build-python:
  image: rustdocker/rust:stable
  stage: build
  script:
    - ./build_python.sh

build-nodejs:
  image: rustdocker/rust:stable
  stage: build
  script:
    - curl -fsSL https://deb.nodesource.com/setup_20.x | sudo bash -
    - apt update
    - sudo apt-get install -y nodejs
    - ./build_nodejs.sh

###############################
#                             #
#     Automated Releases      #
#                             #
###############################
#
# (c) Dylan Van Assche (2022)
# IDLab - Ghent University - imec
#
# Create a Maven package and push it to Maven Central.
#
# CI variables: 
#    - GPG_SECRET_KEY: GPG secret key to sign Maven package as a file
#    - MAVEN_REPO_USER: Maven user for logging in
#    - MAVEN_REPO_PASSWORD: Maven password for logging in

Maven Central Deployment:
  stage: deploy
  image:
    name: maven:3-eclipse-temurin-21
    pull_policy: if-not-present
  before_script:
    - apt-get update && apt-get install -y gpg ca-certificates
    - gpg --version
    - gpg --verbose --import --batch --yes $GPG_SECRET_KEY
  script:
    - cd src/java/algemaploom
    - mvn -s $CI_PROJECT_DIR/src/java/algemaploom/.m2/settings.xml --batch-mode --errors --fail-at-end --show-version -DinstallAtEnd=true -DdeployAtEnd=true clean deploy -P release -DskipTests=true
  allow_failure: true
  retry: 2
  only:
    - tags
